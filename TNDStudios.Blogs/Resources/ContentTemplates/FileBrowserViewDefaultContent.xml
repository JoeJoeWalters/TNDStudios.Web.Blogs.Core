<?xml version="1.0" encoding="utf-8" ?>
<items>
  <item id="attachment-view">
    <content>
      <![CDATA[
      <div class="row">{attachments}</div>
      
      <script>
        // Helper function to get parameters from the query string.
        function browserGetUrlParam( paramName ) {
            var reParam = new RegExp( '(?:[\?&]|&)' + paramName + '=([^&]+)', 'i' );
            var match = window.location.search.match( reParam );

            return ( match && match.length > 1 ) ? match[1] : null;
        }
        
        // Return the filename to the caller
        function returnFileUrl(fileUrl) {

            var funcNum = browserGetUrlParam( 'CKEditorFuncNum' );
            window.opener.CKEDITOR.tools.callFunction( funcNum, fileUrl );
            window.close();
        }
        </script>
      ]]>
    </content>
  </item>
  <item id="attachments">
    <content>
      <![CDATA[<div class="row">{attachmentlist}</div>]]>
    </content>
  </item>
  <item id="attachment-item">
    <content>
      <![CDATA[
      <div class="col-lg-4 col-md-6 col-sm-12 mx-auto\">
        <div>
          <a href="#" onclick="returnFileUrl('{attachmenturl}');">{attachmenttitle}</a>
        </div>
        <hr>
      </div>
      ]]>
    </content>
  </item>
  <item id="attachment-upload">
    <content>
      <![CDATA[
      <script>
        // Helper function to get parameters from the query string.
        function browserGetUrlParam( paramName ) {
            var reParam = new RegExp( '(?:[\?&]|&)' + paramName + '=([^&]+)', 'i' );
            var match = window.location.search.match( reParam );

            return ( match && match.length > 1 ) ? match[1] : null;
        }
        
        // Return the filename to the caller
        function returnFileUrl(fileUrl) {

            var funcNum = browserGetUrlParam( 'CKEditorFuncNum' );
            window.opener.CKEDITOR.tools.callFunction( funcNum, fileUrl );
            window.close();
        }
        
        // Do the action of returning the new url to the caller
        returnFileUrl('{attachmenturl}');
        
        </script>
      ]]>
    </content>
  </item>
</items>